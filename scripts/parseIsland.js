// Generate ISLAND on https://lovable.dev/projects/569199ae-2b2d-460b-8235-bfb32966fbfd
const ISLAND = [
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,1,1,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,1,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
]
const chunks = {}

function blockToChunkPos(x,y,z) {
  let cx = -Math.floor(x/4) + 2048;
  let cy = Math.floor(y/4) + 2048;
  let cz = Math.floor(z/4) + 2048;
  return '0x' + cx.toString(16).padStart(10,'0') + cy.toString(16).padStart(10,'0') + cz.toString(16).padStart(10,'0');
}

function indexToWorldPos(index) {
  let xNotShifted = Math.floor((index + 15) / 30)
  let x = xNotShifted - 15;
  let y = ((index % 30) - 15);
  return [x, y];
}

function fastpow2(n) {
  switch(n) {
    case 0: return "1";
    case 4: return "16";
    case 8: return "256";
    case 12: return "4096";
    case 16: return "65536";
    case 20: return "1048576";
    case 24: return "16777216";
    case 28: return "268435456";
    case 32: return "4294967296";
    case 36: return "68719476736";
    case 40: return "1099511627776";
    case 44: return "17592186044416";
    case 48: return "281474976710656";
    case 52: return "4503599627370496";
    case 56: return "72057594037927936";
    case 60: return "1152921504606846976";
  }
  return "0"
}

ISLAND.forEach((value, index) => {
  if (value > 0) {
    const [x, y] = indexToWorldPos(index)
    const hexPos = blockToChunkPos(x, y, 0)
    chunks[hexPos] = chunks[hexPos] || "0"
    const blockPosInChunk = (3 - (x & 3) + (y & 3) * 4)
    const shiftedValue = BigInt(value.toString()) * BigInt(fastpow2(4 * blockPosInChunk))
    chunks[hexPos] = (BigInt(chunks[hexPos]) + shiftedValue).toString()
  }
})

let i = 0
for (const key in chunks) {
  const value = chunks[key]
  if (value > 0) {
    const id = i
    console.log(`let starter_chunk${id} = IslandChunk {
      island_id: player.into(),
      chunk_id: ${key},
      version: 0,
      blocks1: 0,
      blocks2: ${value.toString()},
  };
  world.write_model(@starter_chunk${id});
  `);
    i++
  }
}
